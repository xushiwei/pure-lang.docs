\input texinfo   @c -*-texinfo-*-
@c %**start of header
@setfilename pure-liblo.info
@documentencoding UTF-8
@copying
Generated by Sphinx
@end copying
@settitle pure-liblo
@defindex ge
@paragraphindent 2
@exampleindent 4
@afourlatex
@dircategory Pure Language and Library Documentation
@direntry
* pure-liblo: (pure-liblo.info).    pure-liblo
@end direntry

@c %**end of header

@titlepage
@title pure-liblo
@author Albert Gräf (Editor)
@end titlepage
@contents

@c %** start of user preamble

@c %** end of user preamble

@ifnottex
@node Top
@top pure-liblo
@end ifnottex

@c %**start of body
@geindex lo module
@anchor{0}@anchor{module-osc}
@geindex osc module
Version 0.8, May 09, 2012

Albert Gräf <@email{Dr.Graef@@t-online.de}>


@menu
* Copying::
* Description::
* Index::
@end menu


@node Copying,Description,Top,Top
@anchor{copying}@anchor{1}@anchor{module-lo}@anchor{2}@anchor{3}
@chapter Copying
Copyright (c) 2009 by Albert Graef.

pure-liblo is free software: you can redistribute it and/or modify it under the
terms of the GNU Lesser General Public License as published by the Free
Software Foundation, either version 3 of the License, or (at your option) any
later version.

pure-liblo is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more
details.

You should have received a copy of the GNU Lesser General Public License along
with this program.  If not, see <@indicateurl{http://www.gnu.org/licenses/}>.


@node Description,Index,Copying,Top
@anchor{description}@anchor{4}
@chapter Description
@anchor{5}@anchor{liblo}@anchor{6}@anchor{open-sound-control}@anchor{7}@anchor{standardized}@anchor{8}@anchor{implementations}This is a quick and dirty Pure wrapper for the @uref{http://liblo.sourceforge.net/,liblo} library by Steve Harris
and others, which implements Berkeley's @uref{http://opensoundcontrol.org/,Open Sound Control} (OSC) protocol.

OSC is a protocol for exchanging data between multimedia devices and software
across the network (TCP, UDP and UNIX domain sockets are supported as the
transport layer). It is also useful as a general communication mechanism for
both hard- and software. In difference to the plain socket interface (on which
it builds), OSC provides you with an efficient means to send around binary
data packets along with the corresponding type and timing information, which
makes it well-suited for both realtime and non-realtime applications.

The OSC protocol is @uref{http://opensoundcontrol.org/spec-1_0,standardized} and is supported by an abundance of
different @uref{http://opensoundcontrol.org/implementations,implementations}, which includes controller hardware of all sorts
and computer music software like CSound, Pd and SuperCollider. Lots of
implementations exist for different programming languages. liblo aims to
provide a lightweight and ubiquitous OSC implementation for the C programming
language.

The @code{lo.pure} module provides a fairly straight wrapper of the C library. A
more high-level and Purified interface is available in @code{osc.pure}. Most of
the time, you'll want to use the latter for convenience, but if you need
utmost flexibility then it is worth having a look at @code{lo.pure}, too.

@itemize *
@item
Get the latest source from
@indicateurl{http://pure-lang.googlecode.com/files/pure-liblo-0.8.tar.gz}.
@item
To install, run @code{make} and @code{sudo make install}. This will try to guess
your Pure installation directory; if it guesses wrong, you can set the
@code{prefix} variable accordingly, see the Makefile for details.
@item
You can also regenerate the wrapper by running @code{make generate}; this
requires the @code{pure-gen} utility and the liblo headers. The present version
was generated from liblo 0.26. If your liblo version differs from that then
it's always a good idea to run @code{make generate}.
@item
Have a look at @code{lo.pure} and @code{osc.pure} for a description of the API
provided to Pure programmers.
@item
The @code{examples} folder contains some Pure code which illustrates how to use
these modules.
@end itemize

@c Enjoy!

@node Index,,Description,Top
@anchor{index}
@unnumbered Index
@printindex ge

@c %**end of body
@bye
